
<script type="text/javascript" src="@Url.Content("~/Scripts/Custom/admin.js")"></script>

 @(Html.Telerik().Grid((IEnumerable<Website.Models.Constituent>)ViewData["Constituents"])
                .Name("RegistrationsGrid")
        .DataKeys(dataKeys => dataKeys.Add(c => c.Id))
        .Columns(columns =>
        {
            columns.Bound(c => c.Id).Title("Id");
            columns.Bound(c => c.Name.NameString);
        })
        
        .Selectable()
        .Sortable()
        .ClientEvents(events => events.OnRowSelect("onRowSelected"))
        .RowAction(row =>
             {
                 row.Selected = row.DataItem.Id.Equals(ViewData["Id"]);
             })
)



@(Html.Telerik().Grid<Website.Models.Constituent>()
        .Name("MatchesGrid")
        .DataKeys(keys => keys.Add(p => p.Id))
        .Columns(c =>
        {
            c.Bound(p => p.Name.NameString).Title("Name");
            c.Bound(p => p.Name.PreferedName);
            c.Bound(p => p.Gender);
            c.Bound(p => p.HouseName);
            c.Bound(p => p.MaritialStatus);
            c.Bound(p => p.BranchName).ClientTemplate("<#= BranchName.Description#>");
        })
        .ClientEvents(events => events
                .OnDataBinding("onDataBinding")
        )
        .DetailView(details => details.ClientTemplate(
                Html.Telerik().TabStrip()
                    .Name("TabStrip_<#= Id #>")
                    .SelectedIndex(0)
                    .Items(items =>
                    {
                        items.Add().Text("Addresses").Content(
                                Html.Telerik().Grid<Website.Models.Address>()
                                    .Name("Addresses_<#= Id #>")
                                    .Columns(columns =>
                                    {
                                        columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                        columns.Bound(p => p.Line1);
                                        columns.Bound(p => p.Line2);
                                        columns.Bound(p => p.City);
                                        columns.Bound(p => p.State);
                                        columns.Bound(p => p.Country);
                                        columns.Bound(p => p.PostCode);
                                    })
                                     .DataBinding(dataBinding => dataBinding.Ajax()
                                        .Select("AllAddresses", "Search", new { constituentId = "<#= Id #>" }))
                                    .Pageable()
                                    .Sortable()
                                    .Filterable()
                                    .ToHtmlString());
                        items.Add().Text("Phones").Content(
                               Html.Telerik().Grid<Website.Models.Phone>()
                                   .Name("Phones_<#= Id #>")
                                   .Columns(columns =>
                                   {
                                       columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                       columns.Bound(p => p.Address).ClientTemplate("<#= Address.Description#>");
                                       columns.Bound(p => p.Number);
                                   })
                                    .DataBinding(dataBinding => dataBinding.Ajax()
                                       .Select("AllPhones", "Search", new { constituentId = "<#= Id #>" }))
                                   .Pageable()
                                   .Sortable()
                                   .Filterable()
                                   .ToHtmlString());
                        items.Add().Text("Emails").Content(
                               Html.Telerik().Grid<Website.Models.Email>()
                                   .Name("Emails_<#= Id #>")
                                   .Columns(columns =>
                                   {
                                       columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                       columns.Bound(p => p.Address);
                                   })
                                    .DataBinding(dataBinding => dataBinding.Ajax()
                                       .Select("AllEmails", "Search", new { constituentId = "<#= Id #>" }))
                                   .Pageable()
                                   .Sortable()
                                   .Filterable()
                                   .ToHtmlString());
                        items.Add().Text("EducationDetails").Content(
                               Html.Telerik().Grid<Website.Models.EducationDetail>()
                                   .Name("EducationDetails_<#= Id #>")
                                   .Columns(columns =>
                                   {
                                       columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                       columns.Bound(p => p.Qualification);
                                       columns.Bound(p => p.InstituteName);
                                       columns.Bound(p => p.InstituteLocation);
                                       columns.Bound(p => p.YearOfGraduation);
                                   })
                                    .DataBinding(dataBinding => dataBinding.Ajax()
                                       .Select("AllEducationDetails", "Search", new { constituentId = "<#= Id #>" }))
                                   .Pageable()
                                   .Sortable()
                                   .Filterable()
                                   .ToHtmlString());
                        items.Add().Text("Occupations").Content(
                               Html.Telerik().Grid<Website.Models.Occupation>()
                                   .Name("Occupations_<#= Id #>")
                                   .Columns(columns =>
                                   {
                                       columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                       columns.Bound(p => p.OccupationName);
                                       columns.Bound(p => p.Description);
                                   })
                                    .DataBinding(dataBinding => dataBinding.Ajax()
                                       .Select("AllOccupations", "Search", new { constituentId = "<#= Id #>" }))
                                   .Pageable()
                                   .Sortable()
                                   .Filterable()
                                   .ToHtmlString());  
                        items.Add().Text("Relationships").Content(
                               Html.Telerik().Grid<Website.Models.Association>()
                                   .Name("Relationships_<#= Id #>")
                                   .Columns(columns =>
                                   {
                                        columns.Bound(p => p.Constituent.Name.NameString).Title("Name");
                                        columns.Bound(p => p.Type).ClientTemplate("<#= Type.Description#>");
                                        columns.Bound(p => p.AssociatedConstituentName).Title("Associated Name");
                                        columns.Bound(p => p.AssociatedConstituent.Name.NameString).Title("Associated Individual");
                                   })
                                    .DataBinding(dataBinding => dataBinding.Ajax()
                                       .Select("AllAssociations", "Search", new { constituentId = "<#= Id #>" }))
                                   .Pageable()
                                   .Sortable()
                                   .Filterable()
                                   .ToHtmlString());
                    }).ToHtmlString()))
                .Sortable()
            )

   